NameVirtualHost *:443
<VirtualHost *:443>
        ### EDIT: change "myendpoint.myapp.myorg" to reflect your endpoint for your capability
        ServerName myendpoint.myapp.myorg.o.igw.us

        RewriteEngine On
        RewriteCond %{HTTPS} off
        RewriteRule (.*) https://%{HTTP_HOST}%{REQUEST_URI}

        SSLEngine On
        ### EDIT: change "mycapability.crt" and "mycapabilty.key" to reflect what and where your cert/key is stored
        SSLCertificateFile /etc/pki/tls/certs/mycapability.crt
        SSLCertificateKeyFile /etc/pki/tls/private/mycapability.key

        # modern configuration, tweak to your needs
        SSLProtocol             all -SSLv2 -SSLv3 -TLSv1
        SSLCipherSuite          ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-DSS-AES128-GCM-SHA256:kEDH+AESGCM:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-DSS-AES128-SHA256:DHE-RSA-AES256-SHA256:DHE-DSS-AES256-SHA:DHE-RSA-AES256-SHA:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!3DES:!MD5:!PSK
        SSLHonorCipherOrder     on

        # HSTS (mod_headers is required) (15768000 seconds = 6 months)
        Header always add Strict-Transport-Security "max-age=15768000"

        # Proxy requests upstream to capability
        # Comment/delete the Apache version lines that do not apply to your installation
        <Proxy *>
                # Apache 2.2 syntax
                Order deny,allow
                Allow from all

                # Apache 2.4 syntax
                Require all granted 
        </Proxy>
        ProxyRequests On
        ProxyPreserveHost On
        ProxyPassInterpolateEnv On

        # do not forward SAML requests to proxy server
        ProxyPass /mellon !

        # forward all other requests to upstream server
        ProxyPass / http://localhost:8080/
        ProxyPassReverse / http://localhost:8080/
        ProxyPassReverseCookiePath / /

        # enforce SAML on all requests for /
        <location />
                Require valid-user
                AuthType "Mellon"
                MellonEnable "auth"
                MellonVariable "cookie"
                MellonSamlResponseDump On
                MellonEndpointPath "/mellon"
                MellonSPMetadataFile /etc/mellon/sp-metadata.xml
                MellonSPPrivateKeyFile /etc/pki/tls/private/mycapability.key
                MellonSPCertFile /etc/pki/tls/certs/mycapability.crt
                MellonIdPMetadataFile /etc/mellon/idp-metadata.xml
                MellonMergeEnvVars On
                MellonSetEnv "nameId" "NAME_ID"
                MellonSetEnv "authLevel" "authLevel"
                MellonSetEnv "isMemberOf" "isMemberOf"

                # enforce that the user has logged into the IDP using a Client Certificate
                MellonCond "authLevel" "1"
                # enforce that the user belongs to a group allowed to use this Capability,
                # choose either "cn=Sponsored Users,cn=gateway,ou=admin,dc=igw,dc=us" for all valid users of the system
                # or select a role from the "Roles" tab when managing your Capability, in doing so users must be added to that role to use your capability.
                MellonCond "isMemberOf" "cn=Sponsored Users,cn=gateway,ou=admin,dc=igw,dc=us"

                RequestHeader set nameId "%{MELLON_nameId}e"
                RequestHeader set memberOf "%{MELLON_isMemberOf}e"
        </location>

        ErrorLog logs/saml-error_log
        CustomLog logs/saml-access_log common
</VirtualHost>
